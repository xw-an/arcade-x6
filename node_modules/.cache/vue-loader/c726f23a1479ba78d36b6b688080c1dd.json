{"remainingRequest":"/Users/xuewei/Desktop/开源项目/arcade-x6/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/xuewei/Desktop/开源项目/arcade-x6/src/views/flows/components/GraphConfigContainer.vue?vue&type=style&index=0&id=9d7bc1e4&scoped=true&lang=css","dependencies":[{"path":"/Users/xuewei/Desktop/开源项目/arcade-x6/src/views/flows/components/GraphConfigContainer.vue","mtime":1689253526989},{"path":"/Users/xuewei/Desktop/开源项目/arcade-x6/node_modules/css-loader/dist/cjs.js","mtime":1689430341713},{"path":"/Users/xuewei/Desktop/开源项目/arcade-x6/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1689430343246},{"path":"/Users/xuewei/Desktop/开源项目/arcade-x6/node_modules/postcss-loader/src/index.js","mtime":1689430342188},{"path":"/Users/xuewei/Desktop/开源项目/arcade-x6/node_modules/cache-loader/dist/cjs.js","mtime":1689430340827},{"path":"/Users/xuewei/Desktop/开源项目/arcade-x6/node_modules/vue-loader-v16/dist/index.js","mtime":1689430342169}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiNoZWFkZXIgewogIGRpc3BsYXk6IGZsZXg7CiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNkZmUzZTg7CiAgcGFkZGluZy10b3A6IDVweDsKICBtYXJnaW46MDsKICBoZWlnaHQ6IDM1cHg7CiAgd2lkdGg6IDEwMCU7Cn0KLmhlYWRlci1pY29uZm9udHsKICBtYXJnaW4tbGVmdDogMjBweDsKICBjdXJzb3I6IHBvaW50ZXI7CiAgY29sb3I6ICM1OTU5NTk7Cn0KCi9kZWVwLyAuY2hhbmdlLXJvdy1iZyB7CiAgYmFja2dyb3VuZC1jb2xvcjogI0ZDRjBFNiAhaW1wb3J0YW50OwogIGN1cnNvcjogcG9pbnRlcjsKfQoKL2RlZXAvIC5hbnQtdGFibGUtdGJvZHkgPiB0ciA+IHRkIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiB1bnNldCAhaW1wb3J0YW50Owp9Ci9kZWVwLyAuYW50LXRhYmxlLXRib2R5ID4gdHI6aG92ZXIgPiB0ZCB7CiAgYmFja2dyb3VuZC1jb2xvcjogI0ZDRjBFNiAhaW1wb3J0YW50OwogIGN1cnNvcjogcG9pbnRlcjsKfQo="},{"version":3,"sources":["/Users/xuewei/Desktop/开源项目/arcade-x6/src/views/flows/components/GraphConfigContainer.vue"],"names":[],"mappings":";AAkSA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACb;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE;EAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;EACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB","file":"/Users/xuewei/Desktop/开源项目/arcade-x6/src/views/flows/components/GraphConfigContainer.vue","sourceRoot":"","sourcesContent":["<template>\n  <div id=\"header\">\n    <a-tooltip title=\"放大\">\n      <span class=\"iconfont header-iconfont\" @click=\"()=>{graphConfig.zoom(0.2)}\">&#xe898;</span>\n    </a-tooltip>\n    <a-tooltip title=\"缩小\">\n      <span class=\"iconfont header-iconfont\" @click=\"()=>{graphConfig.zoom(-0.2)}\">&#xe897;</span>\n    </a-tooltip>\n<!--    <a-tooltip title=\"撤销\">-->\n<!--      <span class=\"iconfont header-iconfont\" @click=\"()=>{graphConfig.history.undo()}\">&#xe739;</span>-->\n<!--    </a-tooltip>-->\n<!--    <a-tooltip title=\"取消撤销\">-->\n<!--      <span class=\"iconfont header-iconfont\" @click=\"()=>{graphConfig.history.redo()}\">&#xe652;</span>-->\n<!--    </a-tooltip>-->\n    <a-tooltip title=\"导出svg\">\n      <span class=\"iconfont header-iconfont\" @click=\"saveToSvg\">&#xe64a;</span>\n    </a-tooltip>\n    <a-tooltip title=\"运行\">\n      <span class=\"iconfont header-iconfont\" @click=\"handleRun\">&#xe616;</span>\n    </a-tooltip>\n<!--    <a-tooltip title=\"日志详情\">-->\n<!--      <span class=\"iconfont header-iconfont\" @click=\"handleLog\">&#xe649;</span>-->\n<!--    </a-tooltip>-->\n    <a-tooltip title=\"版本管理\">\n      <span class=\"iconfont header-iconfont\" @click=\"handleVersion\">&#xe68b;</span>\n    </a-tooltip>\n  </div>\n  <a-modal v-model:visible=\"versionVisible\" title=\"版本管理\" :footer=\"null\" width=\"95%\">\n    <a-table :columns=\"versionColumns\" :data-source=\"versionData\" :scroll=\"{ x: 1500, y: 500 }\" class=\"version-table\" :customRow=\"handleRowClick\" :rowClassName=\"rowClassName\">\n      <template #bodyCell=\"{ column,record }\">\n        <template v-if=\"column.key === 'createdTime'\">\n          <span>{{dateFormat(record.createdTime)}}</span>\n        </template>\n        <template v-else-if=\"column.key === 'updatedTime'\">\n          <span>{{dateFormat(record.updatedTime)}}</span>\n        </template>\n        <template v-else-if=\"column.key === 'status'\">\n          <a-tag color=\"orange\" v-if=\"record.status==0\">未发布</a-tag>\n          <a-tag color=\"green\" v-else-if=\"record.status==1\">已发布</a-tag>\n          <a-tag color=\"red\" v-else-if=\"record.status==2\">已下线</a-tag>\n        </template>\n        <template v-else-if=\"column.key === 'operation'\">\n          <a-button type=\"link\" @click=\"handleCopy(record)\">复制</a-button>\n          <a-divider type=\"vertical\"/>\n          <a-button type=\"link\" @click=\"handlePublish(record)\">发布</a-button>\n          <a-divider type=\"vertical\"/>\n          <a-button type=\"link\" @click=\"handleOffline(record)\">下线</a-button>\n          <a-divider type=\"vertical\"/>\n          <a-button type=\"link\" @click=\"handleLog(record)\">日志</a-button>\n        </template>\n      </template>\n    </a-table>\n  </a-modal>\n</template>\n\n<script>\nimport {DataUri} from '@antv/x6'\nimport {copyVersion, executeFlow, offlineVersion, publishVersion, queryLastTaskId, queryVersions} from \"@/api/request\";\nimport {message} from \"ant-design-vue\";\nimport {useRouter} from \"vue-router/dist/vue-router\";\nimport {ref} from \"vue\";\nimport moment from \"moment\";\n\n// 公共方法\nconst commonFunc = ()=>{\n  const dateFormat = (val)=>{\n    return moment(val).format('YYYY-MM-DD HH:mm:ss')\n  }\n  return {dateFormat}\n}\n\n// 版本管理模块\nconst useVersionEffect = (props,ctx)=>{\n  const selectedRow  = ref(null)\n  const versionVisible = ref(false)\n  // 版本管理\n  const handleVersion = ()=>{\n    // 弹出一个modal\n    versionVisible.value = true\n    // 获取版本数据\n    getVersionData()\n  }\n  // 版本管理表格\n  const versionColumns = [\n    {\n      title: 'id',\n      dataIndex: 'id',\n      key: 'id',\n      // fixed: 'left',\n      width: 80\n    },\n    {\n      title: '版本号',\n      dataIndex: 'version',\n      key: 'version',\n      width: 80\n    },\n    {\n      title: '状态',\n      dataIndex: 'status',\n      key: 'status',\n      width: 80\n    },\n    {\n      title: '创建人',\n      dataIndex: 'createdBy',\n      key: 'createdBy',\n      width: 100\n    },\n    {\n      title: '创建时间',\n      dataIndex: 'createdTime',\n      key: 'createdTime',\n      width: 130\n    },\n    {\n      title: '修改人',\n      dataIndex: 'updatedBy',\n      key: 'updatedBy',\n      width: 100\n    },\n    {\n      title: '修改时间',\n      dataIndex: 'updatedTime',\n      key: 'updatedTime',\n      width: 130\n    },\n    {\n      title: '操作',\n      key: 'operation',\n      // fixed: 'right',\n      width: 200,\n    }]\n  const versionData = ref([])\n  // 调后端接口获取数据\n  const getVersionData = async ()=>{\n    const res = await queryVersions(props.processInstanceId)\n    if(res.code == 0){\n      versionData.value = res.data\n    }\n  }\n  // 发布当前版本\n  const handlePublish = async (record)=>{\n    let req = {\n      id: record.id,\n      processInstanceId: props.processInstanceId,\n      updatedBy: 'amy.xue'\n    }\n    const res = await publishVersion(req)\n    if(res.code == 0){\n      message.success('发布成功')\n      getVersionData()\n    }else {\n      message.error('发布失败：'+res.message)\n    }\n  }\n  // 下线当前版本\n  const handleOffline = async (record)=>{\n    let req = {\n      id: record.id,\n      processInstanceId: props.processInstanceId,\n      updatedBy: 'amy.xue'\n    }\n    const res = await offlineVersion(req)\n    if(res.code == 0){\n      message.success('下线成功')\n      getVersionData()\n    }else {\n      message.error('下线失败：'+res.message)\n    }\n  }\n  // 复制当前版本\n  const handleCopy = async (record)=>{\n    let req = {\n      id: record.id,\n      processInstanceId: props.processInstanceId,\n      createdBy: 'amy.xue',\n      updatedBy: 'amy.xue'\n    }\n    const res = await copyVersion(req)\n    if(res.code == 0){\n      message.success('复制成功')\n      getVersionData()\n    }else {\n      message.error('复制失败：'+res.message)\n    }\n  }\n  // 鼠标点击\n  const handleRowClick = (record) => {\n    return {\n      // onMouseenter: () => {\n      //   // 鼠标移入行时的处理逻辑\n      //   console.log('鼠标移入行时的处理逻辑')\n      // },\n      // onMouseleave: () => {\n      //   // 鼠标移出行时的处理逻辑\n      //   console.log('鼠标移出行时的处理逻辑')\n      // },\n      onClick: () => {\n        // 行点击事件的处理逻辑\n        // console.log(record)\n        // console.log(index)\n        console.log('行点击事件的处理逻辑')\n        selectedRow.value = record\n        // 获取当前的版本号，更新props中的versionId\n        ctx.emit('updateVersion',record)\n        versionVisible.value = false\n      }\n    }\n  }\n  const rowClassName = (record) => {\n    if (record.id === props.versionId) {\n      return 'change-row-bg'\n    }\n    if (selectedRow.value && selectedRow.value.id === record.id) {\n      return 'change-row-bg'\n    }\n  }\n  return {versionVisible,handleVersion,versionColumns,versionData,getVersionData,handlePublish,handleOffline,handleCopy,handleRowClick,rowClassName}\n}\n\nexport default {\n  name: \"GraphConfigContainer\",\n  props: ['graphConfig','versionId','processInstanceId'],\n  emits: ['updateVersion'],\n  setup(props,ctx) {\n    const {dateFormat} = commonFunc()\n    const router = useRouter()\n    // 保存成svg图片\n    const saveToSvg = ()=> {\n     props.graphConfig.toSVG(dataUri => {\n        // 下载\n        DataUri.downloadDataUri(DataUri.svgToDataUrl(dataUri), 'chart.svg')\n        // }, {\n        //   preserveDimensions: {\n        //     width: 800,\n        //     height: 800\n        //   }\n        // })\n      })\n   }\n    // 运行流程\n    const handleRun = () =>{\n    let req = {\n      \"versionId\": props.versionId,\n      \"processInstanceId\": router.currentRoute.value.params.processInstanceId,\n      \"author\": \"amy.xue\" // todo 需要替换变量\n    }\n    // 调执行流程接口\n    executeFlow(req).then(res=>{\n      if (res.code == 0) {\n        message.success('执行发起成功')\n        // 跳转到任务管理页面，并携带任务id参数\n        const {href} = router.resolve({\n          path: '/task',\n          query: {\n            processInstanceName: router.currentRoute.value.params.name,\n            versionId: req.versionId,\n            // processInstanceId: res.data.processInstanceId,\n            taskId: res.data.id\n          }\n        })\n        window.open(href, '_blank')\n        // router.push('/flows/log/'+router.currentRoute.value.params.name+'/'+res.data.processInstanceId+'/'+res.data.id)\n      } else {\n        message.error(res.message)\n      }\n    })\n  }\n    // 日志详情\n    const handleLog = (record)=>{\n      queryLastTaskId(record.id,router.currentRoute.value.params.processInstanceId).then(res=>{\n        if(res.data){\n          const {href} = router.resolve({\n            path: '/flows/log/'+router.currentRoute.value.params.name+'/'+record.id+'/'+router.currentRoute.value.params.processInstanceId+'/'+res.data\n          })\n          window.open(href, '_blank')\n          // router.push('/flows/log/'+router.currentRoute.value.params.name+'/'+router.currentRoute.value.params.processInstanceId+'/'+res.data)\n        }else {\n          message.error('该流程版本下暂无日志')\n        }\n      })\n    }\n    const {versionVisible,handleVersion,versionColumns,versionData,handlePublish,handleOffline,handleCopy,handleRowClick,rowClassName} = useVersionEffect(props,ctx)\n    return {saveToSvg,handleRun,handleLog,handleVersion,versionVisible,versionColumns,versionData,dateFormat,handlePublish,handleOffline,handleCopy,handleRowClick,rowClassName}\n  }\n}\n</script>\n\n<style scoped>\n#header {\n  display: flex;\n  border-top: 1px solid #dfe3e8;\n  padding-top: 5px;\n  margin:0;\n  height: 35px;\n  width: 100%;\n}\n.header-iconfont{\n  margin-left: 20px;\n  cursor: pointer;\n  color: #595959;\n}\n\n/deep/ .change-row-bg {\n  background-color: #FCF0E6 !important;\n  cursor: pointer;\n}\n\n/deep/ .ant-table-tbody > tr > td {\n  background-color: unset !important;\n}\n/deep/ .ant-table-tbody > tr:hover > td {\n  background-color: #FCF0E6 !important;\n  cursor: pointer;\n}\n</style>\n"]}]}