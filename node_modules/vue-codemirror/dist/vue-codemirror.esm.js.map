{"version":3,"file":"vue-codemirror.esm.js","sources":["../src/config.ts","../src/codemirror.ts","../src/events.ts","../src/props.ts","../src/component.ts","../src/index.ts"],"sourcesContent":["import { App, inject } from 'vue'\nimport { basicSetup } from 'codemirror'\nimport { ConfigProps } from './props'\n\nexport const DEFAULT_CONFIG: Readonly<Partial<ConfigProps>> = Object.freeze({\n  autofocus: false,\n  disabled: false,\n  indentWithTab: true,\n  tabSize: 2,\n  placeholder: '',\n  autoDestroy: true,\n  extensions: [basicSetup]\n})\n\nconst CONFIG_SYMBOL = Symbol('vue-codemirror-global-config')\nexport const injectGlobalConfig = (app: App, config?: ConfigProps) => {\n  app.provide(CONFIG_SYMBOL, config)\n}\n\nexport const useGlobalConfig = () => {\n  return inject<ConfigProps>(CONFIG_SYMBOL, {} as ConfigProps)\n}\n","import type { CSSProperties } from 'vue'\nimport { EditorState, EditorStateConfig, Compartment, Extension, StateEffect } from '@codemirror/state'\nimport { EditorView, EditorViewConfig, ViewUpdate, keymap, placeholder } from '@codemirror/view'\nimport { indentWithTab } from '@codemirror/commands'\nimport { indentUnit } from '@codemirror/language'\n\nexport interface CreateStateOptions extends EditorStateConfig {\n  onChange(doc: string, viewUpdate: ViewUpdate): void\n  onUpdate(viewUpdate: ViewUpdate): void\n  onFocus(viewUpdate: ViewUpdate): void\n  onBlur(viewUpdate: ViewUpdate): void\n}\n\nexport const createEditorState = ({ onUpdate, onChange, onFocus, onBlur, ...config }: CreateStateOptions) => {\n  return EditorState.create({\n    doc: config.doc,\n    selection: config.selection,\n    extensions: [\n      ...(Array.isArray(config.extensions) ? config.extensions : [config.extensions]),\n      EditorView.updateListener.of((viewUpdate) => {\n        // https://discuss.codemirror.net/t/codemirror-6-proper-way-to-listen-for-changes/2395/11\n        onUpdate(viewUpdate)\n        // doc changed\n        if (viewUpdate.docChanged) {\n          onChange(viewUpdate.state.doc.toString(), viewUpdate)\n        }\n        // focus state change\n        if (viewUpdate.focusChanged) {\n          viewUpdate.view.hasFocus ? onFocus(viewUpdate) : onBlur(viewUpdate)\n        }\n      })\n    ]\n  })\n}\n\nexport const createEditorView = (config: EditorViewConfig) => new EditorView({ ...config })\nexport const destroyEditorView = (view: EditorView) => view.destroy()\n\n// https://codemirror.net/examples/config/\n// https://github.com/uiwjs/react-codemirror/blob/22cc81971a/src/useCodeMirror.ts#L144\n// https://gist.github.com/s-cork/e7104bace090702f6acbc3004228f2cb\nexport const createEditorCompartment = (view: EditorView) => {\n  const compartment = new Compartment()\n  const run = (extension: Extension) => {\n    compartment.get(view.state)\n      ? view.dispatch({ effects: compartment.reconfigure(extension) }) // reconfigure\n      : view.dispatch({ effects: StateEffect.appendConfig.of(compartment.of(extension)) }) // inject\n  }\n  return { compartment, run }\n}\n\n// https://codemirror.net/examples/reconfigure/\nexport const createEditorExtensionToggler = (view: EditorView, extension: Extension) => {\n  const { compartment, run } = createEditorCompartment(view)\n  return (targetApply?: boolean) => {\n    const exExtension = compartment.get(view.state)\n    const apply = targetApply ?? exExtension !== extension\n    run(apply ? extension : [])\n  }\n}\n\nexport const getEditorTools = (view: EditorView) => {\n  // doc state\n  const getDoc = () => view.state.doc.toString()\n  const setDoc = (newDoc: string) => {\n    if (newDoc !== getDoc()) {\n      view.dispatch({\n        changes: {\n          from: 0,\n          to: view.state.doc.length,\n          insert: newDoc\n        }\n      })\n    }\n  }\n\n  // UX operations\n  const focus = () => view.focus()\n\n  // reconfigure extension\n  const { run: reExtensions } = createEditorCompartment(view)\n\n  // disabled editor\n  const toggleDisabled = createEditorExtensionToggler(view, [\n    EditorView.editable.of(false),\n    EditorState.readOnly.of(true)\n  ])\n\n  // https://codemirror.net/examples/tab/\n  const toggleIndentWithTab = createEditorExtensionToggler(view, keymap.of([indentWithTab]))\n\n  // tab size\n  // https://gist.github.com/s-cork/e7104bace090702f6acbc3004228f2cb\n  const { run: reTabSize } = createEditorCompartment(view)\n  const setTabSize = (tabSize: number) => {\n    reTabSize([EditorState.tabSize.of(tabSize), indentUnit.of(' '.repeat(tabSize))])\n  }\n\n  // phrases\n  // https://codemirror.net/examples/translate/\n  const { run: rePhrases } = createEditorCompartment(view)\n  const setPhrases = (phrases: Record<string, string>) => {\n    rePhrases([EditorState.phrases.of(phrases)])\n  }\n\n  // set editor's placeholder\n  const { run: rePlaceholder } = createEditorCompartment(view)\n  const setPlaceholder = (value: string) => {\n    rePlaceholder(placeholder(value))\n  }\n\n  // set style to editor element\n  // https://codemirror.net/examples/styling/\n  const { run: reStyle } = createEditorCompartment(view)\n  const setStyle = (style: CSSProperties = {}) => {\n    reStyle(EditorView.theme({ '&': { ...(style as any) } }))\n  }\n\n  return {\n    focus,\n    getDoc,\n    setDoc,\n    reExtensions,\n    toggleDisabled,\n    toggleIndentWithTab,\n    setTabSize,\n    setPhrases,\n    setPlaceholder,\n    setStyle\n  }\n}\n","import { EditorState } from '@codemirror/state'\nimport { EditorView, ViewUpdate } from '@codemirror/view'\n\nexport enum EventKey {\n  Change = 'change',\n  Update = 'update',\n  Focus = 'focus',\n  Blur = 'blur',\n  Ready = 'ready',\n  ModelUpdate = 'update:modelValue'\n}\n\nexport const editorEvents = {\n  // when content(doc) change only\n  [EventKey.Change]: (value: string, viewUpdate: ViewUpdate) => true,\n  // when codemirror state change\n  [EventKey.Update]: (viewUpdate: ViewUpdate) => true,\n  [EventKey.Focus]: (viewUpdate: ViewUpdate) => true,\n  [EventKey.Blur]: (viewUpdate: ViewUpdate) => true,\n  // when component mounted\n  [EventKey.Ready]: (payload: { view: EditorView; state: EditorState; container: HTMLDivElement }) => true\n}\n\nexport const modelUpdateEvent = {\n  [EventKey.ModelUpdate]: editorEvents[EventKey.Change]\n}\n\nexport const events = {\n  ...editorEvents,\n  ...modelUpdateEvent\n}\n\nexport type EditorEvents = typeof editorEvents\nexport type Events = typeof events\n","import type { CSSProperties } from 'vue'\nimport { PropType, ExtractPropTypes } from 'vue'\nimport { EditorStateConfig } from '@codemirror/state'\n\nconst UNDEFINED = void 0\nconst NonDefaultBooleanType = {\n  type: Boolean,\n  default: UNDEFINED\n}\n\nexport const configProps = {\n  autofocus: NonDefaultBooleanType,\n  disabled: NonDefaultBooleanType,\n  indentWithTab: NonDefaultBooleanType,\n  tabSize: Number,\n  placeholder: String,\n  style: Object as PropType<CSSProperties>,\n  autoDestroy: NonDefaultBooleanType,\n  phrases: Object as PropType<Record<string, string>>,\n  // codemirror options\n  root: Object as PropType<ShadowRoot | Document>,\n  extensions: Array as PropType<EditorStateConfig['extensions']>,\n  selection: Object as PropType<EditorStateConfig['selection']>\n}\n\nexport const modelValueProp = {\n  modelValue: {\n    type: String,\n    default: ''\n  }\n}\n\nexport const props = {\n  ...configProps,\n  ...modelValueProp\n}\n\nexport type ConfigProps = ExtractPropTypes<typeof configProps>\nexport type Props = ExtractPropTypes<typeof props>\nexport type PropKey = keyof Props\n","import { defineComponent, shallowRef, computed, watch, toRaw, onMounted, onBeforeUnmount, h } from 'vue'\nimport { EditorState } from '@codemirror/state'\nimport { EditorView } from '@codemirror/view'\nimport { createEditorState, createEditorView, destroyEditorView, getEditorTools } from './codemirror'\nimport { useGlobalConfig, DEFAULT_CONFIG } from './config'\nimport { props, ConfigProps } from './props'\nimport { events, EventKey } from './events'\n\nexport default defineComponent({\n  name: 'VueCodemirror',\n  props: { ...props },\n  emits: { ...events },\n  setup(props, context) {\n    const container = shallowRef<HTMLDivElement>()\n    const state = shallowRef<EditorState>()\n    const view = shallowRef<EditorView>()\n\n    const defaultConfig: ConfigProps = {\n      ...DEFAULT_CONFIG,\n      ...useGlobalConfig()\n    }\n\n    const config = computed<ConfigProps>(() => {\n      const result = {} as Required<ConfigProps>\n      Object.keys(toRaw(props)).forEach((key: any) => {\n        if (key !== 'modelValue') {\n          // @ts-ignore\n          // MARK: ensure access to `prop[key]` original object\n          result[key] = props[key] ?? defaultConfig[key]\n        }\n      })\n      return result\n    })\n\n    onMounted(() => {\n      state.value = createEditorState({\n        doc: props.modelValue,\n        selection: config.value.selection,\n        // The extensions are split into two parts, global and component prop.\n        // Only the global part is initialized here.\n        // The prop part is dynamically reconfigured after the component is mounted.\n        extensions: defaultConfig.extensions ?? [],\n        onFocus: (viewUpdate) => context.emit(EventKey.Focus, viewUpdate),\n        onBlur: (viewUpdate) => context.emit(EventKey.Blur, viewUpdate),\n        onUpdate: (viewUpdate) => context.emit(EventKey.Update, viewUpdate),\n        onChange: (newDoc, viewUpdate) => {\n          if (newDoc !== props.modelValue) {\n            context.emit(EventKey.Change, newDoc, viewUpdate)\n            context.emit(EventKey.ModelUpdate, newDoc, viewUpdate)\n          }\n        }\n      })\n\n      view.value = createEditorView({\n        state: state.value,\n        parent: container.value!,\n        root: config.value.root\n      })\n\n      const editorTools = getEditorTools(view.value)\n\n      // watch prop.modelValue\n      watch(\n        () => props.modelValue,\n        (newValue) => {\n          if (newValue !== editorTools.getDoc()) {\n            editorTools.setDoc(newValue)\n          }\n        }\n      )\n\n      // watch prop.extensions\n      watch(\n        () => props.extensions,\n        (extensions) => editorTools.reExtensions(extensions || []),\n        { immediate: true }\n      )\n\n      // watch prop.disabled\n      watch(\n        () => config.value.disabled,\n        (disabled) => editorTools.toggleDisabled(disabled),\n        { immediate: true }\n      )\n\n      // watch prop.indentWithTab\n      watch(\n        () => config.value.indentWithTab,\n        (iwt) => editorTools.toggleIndentWithTab(iwt),\n        { immediate: true }\n      )\n\n      // watch prop.tabSize\n      watch(\n        () => config.value.tabSize,\n        (tabSize) => editorTools.setTabSize(tabSize!),\n        { immediate: true }\n      )\n\n      // watch prop.phrases\n      watch(\n        () => config.value.phrases,\n        (phrases) => editorTools.setPhrases(phrases || {}),\n        { immediate: true }\n      )\n\n      // watch prop.placeholder\n      watch(\n        () => config.value.placeholder,\n        (placeholder) => editorTools.setPlaceholder(placeholder!),\n        { immediate: true }\n      )\n\n      // watch prop.style\n      watch(\n        () => config.value.style,\n        (style) => editorTools.setStyle(style),\n        { immediate: true }\n      )\n\n      // immediate autofocus\n      if (config.value.autofocus) {\n        editorTools.focus()\n      }\n\n      context.emit(EventKey.Ready, {\n        state: state.value!,\n        view: view.value!,\n        container: container.value!\n      })\n    })\n\n    onBeforeUnmount(() => {\n      if (config.value.autoDestroy && view.value) {\n        destroyEditorView(view.value)\n      }\n    })\n\n    return () => {\n      return h('div', {\n        class: 'v-codemirror',\n        style: { display: 'contents' },\n        ref: container\n      })\n    }\n  }\n})\n","import type { Plugin } from 'vue'\nimport type { Props } from './props'\nimport { injectGlobalConfig } from './config'\nimport Component from './component'\n\nexport type { Props } from './props'\nexport type { Events } from './events'\nexport { DEFAULT_CONFIG } from './config'\n\nexport const Codemirror = Component\nexport const install: Plugin = (app, defaultConfig?: Props) => {\n  app.component(Component.name, Component)\n  app.component('Codemirror', Component)\n  injectGlobalConfig(app, defaultConfig)\n}\n\nexport default {\n  Codemirror,\n  install\n}\n"],"names":["DEFAULT_CONFIG","Object","freeze","autofocus","disabled","indentWithTab","tabSize","placeholder","autoDestroy","extensions","basicSetup","CONFIG_SYMBOL","Symbol","const","EventKey","createEditorState","_a","onUpdate","onChange","onFocus","onBlur","config","__rest","EditorState","create","doc","selection","Array","isArray","concat","EditorView","updateListener","of","viewUpdate","docChanged","state","toString","focusChanged","view","hasFocus","createEditorCompartment","compartment","Compartment","run","extension","get","dispatch","effects","reconfigure","StateEffect","appendConfig","createEditorExtensionToggler","ref","targetApply","exExtension","NonDefaultBooleanType","type","Boolean","default","configProps","Number","String","style","phrases","root","modelValueProp","modelValue","props","assign","editorEvents","Change","value","Update","Focus","Blur","Ready","payload","modelUpdateEvent","ModelUpdate","events","Component","defineComponent","name","emits","setup","context","container","shallowRef","defaultConfig","inject","computed","result","keys","toRaw","forEach","key","onMounted","emit","newDoc","createEditorView","parent","editorTools","getDoc","reExtensions","toggleDisabled","editable","readOnly","toggleIndentWithTab","keymap","reTabSize","rePhrases","rePlaceholder","reStyle","focus","changes","from","to","length","insert","indentUnit","repeat","theme","getEditorTools","watch","newValue","setDoc","immediate","iwt","setTabSize","setPhrases","setPlaceholder","setStyle","onBeforeUnmount","destroy","destroyEditorView","h","class","display","Codemirror","install","app","component","provide","injectGlobalConfig","index"],"mappings":"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"}