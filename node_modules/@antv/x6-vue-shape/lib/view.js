"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.VueShapeView = void 0;
var x6_1 = require("@antv/x6");
var vue_demi_1 = require("vue-demi");
var VueShapeView = /** @class */ (function (_super) {
    __extends(VueShapeView, _super);
    function VueShapeView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    VueShapeView.prototype.init = function () {
        _super.prototype.init.call(this);
    };
    VueShapeView.prototype.getComponentContainer = function () {
        return this.selectors.foContent;
    };
    VueShapeView.prototype.confirmUpdate = function (flag) {
        var _this = this;
        var ret = _super.prototype.confirmUpdate.call(this, flag);
        return this.handleAction(ret, VueShapeView.action, function () {
            x6_1.Scheduler.scheduleTask(function () {
                _this.renderVueComponent();
            });
        });
    };
    VueShapeView.prototype.renderVueComponent = function () {
        this.unmountVueComponent();
        var root = this.getComponentContainer();
        var node = this.cell;
        var graph = this.graph;
        if (root) {
            var component_1 = this.graph.hook.getVueComponent(node);
            if (vue_demi_1.isVue2) {
                var Vue_1 = vue_demi_1.Vue2;
                if (typeof component_1 === 'string') {
                    this.vm = new Vue_1({ template: component_1 });
                }
                else {
                    this.vm = new Vue_1({
                        render: function () {
                            // 保留之前的provide，增加传递graph和node
                            return (0, vue_demi_1.h)(component_1, { graph: graph, node: node });
                        },
                        provide: function () {
                            return {
                                getGraph: function () { return graph; },
                                getNode: function () { return node; },
                            };
                        },
                    });
                }
                this.vm.$mount(root);
            }
            else if (vue_demi_1.isVue3) {
                this.vm = (0, vue_demi_1.createApp)({
                    render: function () {
                        // 保留之前的provide，增加传递graph和node
                        return (0, vue_demi_1.h)(component_1, { graph: graph, node: node });
                    },
                    provide: function () {
                        return {
                            getGraph: function () { return graph; },
                            getNode: function () { return node; },
                        };
                    },
                });
                this.vm.mount(root);
            }
        }
    };
    VueShapeView.prototype.unmountVueComponent = function () {
        var root = this.getComponentContainer();
        if (this.vm) {
            vue_demi_1.isVue2 && this.vm.$destroy();
            vue_demi_1.isVue3 && this.vm.unmount();
            this.vm = null;
        }
        root.innerHTML = '';
        return root;
    };
    VueShapeView.prototype.unmount = function () {
        this.unmountVueComponent();
        _super.prototype.unmount.call(this);
        return this;
    };
    return VueShapeView;
}(x6_1.NodeView));
exports.VueShapeView = VueShapeView;
(function (VueShapeView) {
    VueShapeView.action = 'vue';
    VueShapeView.config({
        bootstrap: [VueShapeView.action],
        actions: {
            component: VueShapeView.action,
        },
    });
    x6_1.NodeView.registry.register('vue-shape-view', VueShapeView, true);
})(VueShapeView = exports.VueShapeView || (exports.VueShapeView = {}));
exports.VueShapeView = VueShapeView;
//# sourceMappingURL=view.js.map